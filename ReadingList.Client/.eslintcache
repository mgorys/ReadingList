[{"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\index.js":"1","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\App.js":"2","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\Navbar.js":"3","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\Home.js":"4","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\BlogList.js":"5","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\useFetch.js":"6","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\Create.js":"7","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\BlogDetails.js":"8","C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\NotFound.js":"9","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\index.js":"10","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\App.js":"11","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\Navbar.js":"12","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\Create.js":"13","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\Home.js":"14","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\NotFound.js":"15","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\BookDetails.js":"16","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\BookList.js":"17","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\useFetch.js":"18"},{"size":432,"mtime":1607880605000,"results":"19","hashOfConfig":"20"},{"size":696,"mtime":1670503490454,"results":"21","hashOfConfig":"20"},{"size":411,"mtime":1670497223764,"results":"22","hashOfConfig":"20"},{"size":400,"mtime":1670498379190,"results":"23","hashOfConfig":"20"},{"size":439,"mtime":1670502114943,"results":"24","hashOfConfig":"20"},{"size":1081,"mtime":1670498923557,"results":"25","hashOfConfig":"20"},{"size":1604,"mtime":1670502824875,"results":"26","hashOfConfig":"20"},{"size":941,"mtime":1670503139821,"results":"27","hashOfConfig":"20"},{"size":305,"mtime":1670504108310,"results":"28","hashOfConfig":"20"},{"size":432,"mtime":1670860205627,"results":"29","hashOfConfig":"30"},{"size":720,"mtime":1670860207466,"results":"31","hashOfConfig":"30"},{"size":566,"mtime":1670857008338,"results":"32","hashOfConfig":"30"},{"size":1768,"mtime":1670860199349,"results":"33","hashOfConfig":"30"},{"size":449,"mtime":1670864864169,"results":"34","hashOfConfig":"30"},{"size":305,"mtime":1670837700028,"results":"35","hashOfConfig":"30"},{"size":3909,"mtime":1670867286426,"results":"36","hashOfConfig":"30"},{"size":2893,"mtime":1670864874155,"results":"37","hashOfConfig":"30"},{"size":949,"mtime":1670855767896,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r4ki5n",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"s5pwhe",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\index.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\App.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\Navbar.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\Home.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\BlogList.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\useFetch.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\Create.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\BlogDetails.js",[],"C:\\projects\\nauka\\react\\Complete-React-Tutorial-lesson-16\\dojo-blog\\src\\NotFound.js",[],"C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\index.js",[],["80","81"],"C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\App.js",[],"C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\Navbar.js",["82"],"import { NavLink } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>List of my Books</h1>\n      <div className=\"links\">\n        <NavLink to=\"/\">Home</NavLink>\n        <NavLink\n          to=\"/create\"\n          style={{\n            color: 'white',\n            backgroundColor: '#3554f1',\n            borderRadius: '8px',\n          }}>\n          Add Book\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\Create.js",["83"],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst urlServer = 'https://localhost:7138/api/';\r\nconst Create = () => {\r\n  const [name, setName] = useState('');\r\n  const [priorityString, setPriorityString] = useState(0);\r\n  const [finished, setFinished] = useState(false);\r\n  const [imgUrl, setImgUrl] = useState('');\r\n  const [isPending, setIsPending] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const priority = parseInt(priorityString);\r\n\r\n    const book = { name, imgUrl, finished, priority };\r\n    setIsPending(true);\r\n\r\n    fetch(urlServer + 'PostBook/', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(book),\r\n    }).then(() => {\r\n      setIsPending(false);\r\n      navigate('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a New Book</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Book name:</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <label>Book Finished:</label>\r\n        <input\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          value={finished}\r\n          onChange={(e) => setFinished(e.target.checked)}></input>\r\n        <label>Book Image Url:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={imgUrl}\r\n          onChange={(e) => setImgUrl(e.target.value)}\r\n        />\r\n\r\n        {!isPending ? (\r\n          <button>Add Book</button>\r\n        ) : (\r\n          <button disabled>Adding Book</button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\Home.js",[],"C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\NotFound.js",[],"C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\BookDetails.js",["84","85"],"C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\BookList.js",["86","87"],"import { Link } from 'react-router-dom';\nimport React from 'react';\nimport useFetch from './useFetch';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons';\n\nconst urlServer = 'https://localhost:7138/api/';\nconst defaultImg =\n  'https://demo.publishr.cloud/assets/common/images/edition_placeholder.png';\nconst BookList = ({ books, isPending }) => {\n  const navigate = useNavigate();\n  const handleChangePriorityNumber = async (e, f) => {\n    //e->book.name , f->value\n    const updateImgValue = f;\n    await fetch(urlServer + 'MoveBookPriority/' + e, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(updateImgValue),\n    });\n    navigate(0, { replace: true });\n  };\n\n  return (\n    <div className=\"book-list\">\n      {console.log(books)}\n      {!isPending && Array.isArray(books.dataFromServer) ? (\n        books.dataFromServer\n          .sort((a, b) => a.priorityNumber - b.priorityNumber)\n          .map((book) => (\n            <div className=\"book-preview\" key={book.priorityNumber}>\n              <div className=\"imgContainer\">\n                <Link to={`/books/${book.name}`}>\n                  <img\n                    src={book.imgUrl ? book.imgUrl : defaultImg}\n                    alt={book.name}\n                    width=\"200\"\n                    height=\"300\"\n                  />\n                </Link>\n              </div>\n              <div className=\"container\">\n                <Link to={`/books/${book.name}`}>\n                  <h2>{book.name}</h2>\n                </Link>\n                <h2>Have i finished? : {book.finished ? 'Yes' : 'Not yet'}</h2>\n              </div>\n              <div className=\"button-container\">\n                <Button\n                  value=\"up\"\n                  variant=\"outline-primary\"\n                  onClick={(e) =>\n                    handleChangePriorityNumber(book.name, e.target.value)\n                  }>\n                  <FontAwesomeIcon\n                    icon={faArrowUp}\n                    style={{ color: 'white' }}\n                  />\n                </Button>\n                <Button\n                  value=\"down\"\n                  variant=\"outline-primary\"\n                  onClick={(e) =>\n                    handleChangePriorityNumber(book.name, e.target.value)\n                  }>\n                  <FontAwesomeIcon\n                    icon={faArrowDown}\n                    style={{ color: '#fff' }}\n                  />\n                </Button>\n              </div>\n            </div>\n          ))\n      ) : (\n        <h2>---Loading---</h2>\n      )}\n    </div>\n  );\n};\n\nexport default BookList;\n","C:\\projects\\Solbeg\\tasks\\ReadingListTask\\ReadingList.Client\\src\\useFetch.js",["88"],"import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(async () => {\r\n    const abortCont = new AbortController();\r\n    await fetch(url, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error('could not fetch the data for that resource');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n        setIsPending(false);\r\n        setError();\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === 'AbortError') {\r\n          console.log('fetch aborted');\r\n        } else {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n  return { data, isPending, error };\r\n};\r\nexport default useFetch;\r\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},{"ruleId":"93","severity":1,"message":"97","line":7,"column":26,"nodeType":"95","messageId":"96","endLine":7,"endColumn":43},{"ruleId":"93","severity":1,"message":"98","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":27,"column":6,"nodeType":"101","endLine":27,"endColumn":8,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":16},{"ruleId":"93","severity":1,"message":"104","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"99","severity":1,"message":"105","line":8,"column":13,"nodeType":"106","endLine":31,"endColumn":4},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'setPriorityString' is assigned a value but never used.","'render' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bookDetails.dataFromServer' and 'isPending'. Either include them or remove the dependency array.","ArrayExpression",["109"],"'useFetch' is defined but never used.","'useState' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [bookDetails.dataFromServer, isPending]",{"range":"112","text":"113"},[952,954],"[bookDetails.dataFromServer, isPending]"]